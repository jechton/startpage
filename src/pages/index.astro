---
import config from "../data/config.json";
// import Weather from "../components/Weather.astro";
// import Greeting from "../components/Greeting.astro";

const bgColor = config.colors?.background ?? "#303446";
const fgColor = config.colors?.foreground ?? "#c6d0f5";
const commentColor = config.colors?.comment ?? "#737994";
const highlightColor = config.colors?.highlight ?? "#8caaee";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{config.title ?? "New Tab"}</title>
  </head>
  <body>
    <!-- <Greeting />
    <Weather /> -->
    <div id="grid-container">
      <div id="grid">
        {
          config.categories
            .sort((a, b) => a.name.localeCompare(b.name))
            .map(
              (category: {
                name: string;
                links: { name: string; url: string }[];
              }) => (
                <div class="category-container">
                  <h3 class="category-title">{category.name}</h3>
                  <ul>
                    {category.links
                      .sort((a, b) => a.name.localeCompare(b.name))
                      .map((link) => (
                        <li>
                          <a href={link.url}>{link.name}</a>
                        </li>
                      ))}
                  </ul>
                </div>
              )
            )
        }
      </div>
    </div>
  </body>
</html>
<style
  is:global
  define:vars={{ bgColor, fgColor, commentColor, highlightColor }}
>
  @import url("https://fonts.bunny.net/css?family=overpass-mono:500,700");

  body {
    margin: 0;
    font-family: "Overpass Mono", monospace;
    color: var(--fgColor);
    background-color: var(--bgColor);
  }

  #grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    width: 100%;
    padding: 50px 150px 10px;
  }

  #grid-container {
    display: flex;
    justify-content: center;
    height: 100%;
    color: var(--fgColor);
    text-decoration: none;
  }

  .category-container {
    flex-basis: calc(20% - 10px);
    min-width: 250px;
    padding: 25px;
    border-radius: 10px;

    &:hover {
      background-color: hsl(from var(--bgColor) h s calc(l + 5));
      transition: all 0.15s ease-in;
    }
  }

  .category-title {
    margin: 5px;
    font-weight: bold;
    color: var(--highlightColor);
  }

  a {
    text-decoration: none;

    &:link {
      color: var(--fgColor);
    }

    &:visited {
      color: var(--fgColor);
    }

    &:hover {
      color: hsl(from var(--fgColor) h calc(s + 20) calc(l - 10));
    }
  }

  ul {
    padding: 0;
    margin: 0 0 0 10px;
    list-style: none;
  }

  li {
    padding: 0;
    margin: 0;
    line-height: 20px;
    color: var(--commentColor);
    border-left: 1px solid var(--commentColor);

    &:last-child {
      border-left: none;
    }

    &::before {
      position: relative;
      top: -0.3em;
      display: inline-block;
      width: 12px;
      height: 1em;
      color: var(--commentColor);
      content: "";
      border-bottom: 1px solid var(--commentColor);
    }

    &:last-child::before {
      border-left: 1px solid var(--commentColor);
    }
  }
</style>
